global IO;

var testgen = function*(vars...)
{
	for(var i=0;i<vars[0];i++)
	{
		//IO.print(i);
		yield i;
	}
}

System.exit(0);

for(value : testgen(10))
	IO.print(value);

var objtest = {};

objtest.done = 50;

function factorial(x)
{
	return x < 2 ? 1 : x * factorial(x - 1);
}

IO.print(factorial(5));

var test = "two";
var local = 650;
local = local === 650 ? local * 2 : local - 50;

try
{
	var jjj = 60;
	if(jjj == 60)
		throw jjj.." not works";
}
catch(ex)
{
	IO.print(ex.getStackTrace());
	IO.print(Object.toString(ex));
}

function print(tag, vars...)
{
	IO.print(tag, vars.expand());
}

var assign = function(obj, varname, value = null)
{
	Object.setProperty(obj, varname, value);
};

print("ROOT", "ola", "k", "ase");

assign(objtest, "[]", print);

objtest.toString = function() { return Object.toString(self); };

IO.print(objtest);

assign(objtest, "boperator::+", function(value)
{
	if(typeof(self.value) !== "number")
		self.value = 0;
	self.value += value;
	return self.value;
});

IO.print(objtest + 250);

switch(test)
{
	case 1:
		IO.print("The FIRST case");
		break;
	case "two":
		IO.print("Is in case 2!!");
		break;
	case 3.3:
		IO.print("3 is the case!");
		break;
	default:
		IO.print("Is in DEFAULT");
	break;
}

for(value, i : [5, 10, 20, 40, "end"])
	IO.print("Value: "..value.."; iteration: "..i..";");

if(5 > 4 && (10 === 9 || 10 === 10))
	IO.print(true);
else if(IO === null)
{
	IO.print(650);
	IO = Object;
}
else if(650 < 10 || IO !== null) {}
else {
	IO.print("lol");
}

var it = 0;
while(it < 11)
	IO.print("Iteration number: "..!(++it));

local = 650;
local = local === 650 ? local * 2 : local - 50;

var arr = [45, null, "this is sparta", [], 5.65f];

IO.print(arr.expand());

var tuple = (5, 8);
IO.print((5, "nada mÃ¡s", 650));

var obj = {
	done: true,
	law: ["dash", false]
};

IO.print(obj, new Object(obj));
IO.print(new obj());

IO.print(Object.deepToString(
{
	done: true,
	law: ["dash", false],
	nested: {
		folk: ("none", 65)
	}
}));

var map = [:];
map.put("dash", false);

IO.print([
	"hello": true,
	"inf": Infinity,
	5: local,
	"obj": { dash: true, power: 50 }
]);

local, arr[0], obj.law[1] = local + 50, "none", true;

IO.print(typeof (IO.print));
IO.print(new obj() instanceof obj);

IO.print((65,)..["hola", "k", "ase"]);

for(var it, pow = 0, 0; it < 12; it, pow = it + 1, it * it)
{
	IO.print("Iteration number: "..pow);
}



//local.show("hola", arr[2](6, local));
/*local.show(arr, 750, arr[6], 4, 65, arr[5](65, 8, 5, 78, 15, 999, 5), "hell", 9999);
local("poz ezo");*/