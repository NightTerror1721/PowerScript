
Query = const {
	
	constructor: function() {
		self._id = Number.long(Math.random() * Number.MAX_INTEGER);
		Object.freezeProperty(self, "_id");
	},
	
	toString: function() { return "query"; },
	equals: function(query) {
		return query instanceof Query && self._id == query._id;
	},
	notEquals: function(query) { return !(self == query); }
};

IO.print(Object.toString(Query));
IO.print(new Query());


function counter()
{
	static value = 0;
	return value++;
}



/*Color = Object.extends(Query, const {
	constructor: function(r, g, b) {
		Object.superConstructor(self);
		
		
	}
});*/

//IO.print(new Color()._id);

for(var i=0;i<100;i++)
	IO.print("count: "..counter());
